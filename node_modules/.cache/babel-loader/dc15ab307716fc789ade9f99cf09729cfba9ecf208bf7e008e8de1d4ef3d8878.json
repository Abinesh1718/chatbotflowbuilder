{"ast":null,"code":"var _jsxFileName = \"/home/abinesh/project/chatbot-flow-builder/src/CustomNode.js\";\nimport React from 'react';\nimport { Handle } from 'react-flow-renderer';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomNode = props => {\n  const {\n    data,\n    selected,\n    setSelectedNode\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        width: '16rem',\n        border: selected ? 'solid 2px green' : 'solid 2px blue',\n        height: '4rem',\n        backgroundColor: selected ? '#f0f0f0' : '#fff'\n      },\n      onClick: () => setSelectedNode(data),\n      children: [/*#__PURE__*/_jsxDEV(Handle, {\n        type: \"target\",\n        position: \"right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), data.label, /*#__PURE__*/_jsxDEV(Handle, {\n        type: \"source\",\n        position: \"left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomNode;\nexport default CustomNode;\nvar _c;\n$RefreshReg$(_c, \"CustomNode\");","map":{"version":3,"names":["React","Handle","Button","jsxDEV","_jsxDEV","CustomNode","props","data","selected","setSelectedNode","children","style","width","border","height","backgroundColor","onClick","type","position","fileName","_jsxFileName","lineNumber","columnNumber","label","_c","$RefreshReg$"],"sources":["/home/abinesh/project/chatbot-flow-builder/src/CustomNode.js"],"sourcesContent":["import React from 'react';\nimport { Handle } from 'react-flow-renderer';\nimport Button from '@mui/material/Button';\n\nconst CustomNode = (props) => {\n  const { data, selected, setSelectedNode } = props;\n\n  return (\n    <div>\n      <Button\n        style={{\n          width: '16rem',\n          border: selected ? 'solid 2px green' : 'solid 2px blue',\n          height: '4rem',\n          backgroundColor: selected ? '#f0f0f0' : '#fff',\n        }}\n        onClick={() => setSelectedNode(data)}\n      >\n        <Handle type=\"target\" position=\"right\" />\n        {data.label}\n        <Handle type=\"source\" position=\"left\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default CustomNode;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAC5B,MAAM;IAAEC,IAAI;IAAEC,QAAQ;IAAEC;EAAgB,CAAC,GAAGH,KAAK;EAEjD,oBACEF,OAAA;IAAAM,QAAA,eACEN,OAAA,CAACF,MAAM;MACLS,KAAK,EAAE;QACLC,KAAK,EAAE,OAAO;QACdC,MAAM,EAAEL,QAAQ,GAAG,iBAAiB,GAAG,gBAAgB;QACvDM,MAAM,EAAE,MAAM;QACdC,eAAe,EAAEP,QAAQ,GAAG,SAAS,GAAG;MAC1C,CAAE;MACFQ,OAAO,EAAEA,CAAA,KAAMP,eAAe,CAACF,IAAI,CAAE;MAAAG,QAAA,gBAErCN,OAAA,CAACH,MAAM;QAACgB,IAAI,EAAC,QAAQ;QAACC,QAAQ,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACxCf,IAAI,CAACgB,KAAK,eACXnB,OAAA,CAACH,MAAM;QAACgB,IAAI,EAAC,QAAQ;QAACC,QAAQ,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACE,EAAA,GApBInB,UAAU;AAsBhB,eAAeA,UAAU;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}