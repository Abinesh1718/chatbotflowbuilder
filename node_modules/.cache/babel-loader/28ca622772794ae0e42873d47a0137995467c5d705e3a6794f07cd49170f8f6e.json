{"ast":null,"code":"var _jsxFileName = \"/home/abinesh/project/chatbot-flow-builder/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactFlow, { ReactFlowProvider, MiniMap, Controls, Background, useNodes, useEdges, removeElements } from 'react-flow-renderer';\nimport CustomNode from './CustomNode';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  textMessage: CustomNode\n};\nconst initialElements = [{\n  id: '1',\n  type: 'textMessage',\n  data: {\n    label: 'Text Message 1'\n  },\n  position: {\n    x: 250,\n    y: 5\n  }\n}];\nlet id = 2; // Incremental ID for new nodes\n\nfunction App() {\n  _s();\n  const [elements, setElements] = useState(initialElements);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [editedLabel, setEditedLabel] = useState('');\n  const onElementClick = (event, element) => {\n    setSelectedNode(element);\n    setEditedLabel(element.data.label);\n  };\n  const handleLabelChange = event => {\n    setEditedLabel(event.target.value);\n  };\n  const handleSaveLabel = () => {\n    if (!selectedNode) return;\n    const updatedElements = elements.map(el => el.id === selectedNode.id ? {\n      ...el,\n      data: {\n        ...el.data,\n        label: editedLabel\n      }\n    } : el);\n    setElements(updatedElements);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        elements: elements,\n        onElementClick: onElementClick,\n        nodeTypes: nodeTypes,\n        snapToGrid: true,\n        snapGrid: [15, 15],\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-panel\",\n      children: selectedNode && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Edit Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: editedLabel,\n          onChange: handleLabelChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveLabel,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Z1L5V0idqDZdBMUN2XHYKuDlGRY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReactFlow","ReactFlowProvider","MiniMap","Controls","Background","useNodes","useEdges","removeElements","CustomNode","jsxDEV","_jsxDEV","nodeTypes","textMessage","initialElements","id","type","data","label","position","x","y","App","_s","elements","setElements","selectedNode","setSelectedNode","editedLabel","setEditedLabel","onElementClick","event","element","handleLabelChange","target","value","handleSaveLabel","updatedElements","map","el","className","children","snapToGrid","snapGrid","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/abinesh/project/chatbot-flow-builder/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactFlow, {\n  ReactFlowProvider,\n  MiniMap,\n  Controls,\n  Background,\n  useNodes,\n  useEdges,\n  removeElements,\n} from 'react-flow-renderer';\nimport CustomNode from './CustomNode';\nimport './App.css';\n\nconst nodeTypes = {\n  textMessage: CustomNode,\n};\n\nconst initialElements = [\n  { id: '1', type: 'textMessage', data: { label: 'Text Message 1' }, position: { x: 250, y: 5 } },\n];\n\nlet id = 2; // Incremental ID for new nodes\n\nfunction App() {\n  const [elements, setElements] = useState(initialElements);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [editedLabel, setEditedLabel] = useState('');\n\n  const onElementClick = (event, element) => {\n    setSelectedNode(element);\n    setEditedLabel(element.data.label);\n  };\n\n  const handleLabelChange = (event) => {\n    setEditedLabel(event.target.value);\n  };\n\n  const handleSaveLabel = () => {\n    if (!selectedNode) return;\n\n    const updatedElements = elements.map((el) =>\n      el.id === selectedNode.id ? { ...el, data: { ...el.data, label: editedLabel } } : el\n    );\n\n    setElements(updatedElements);\n  };\n\n  return (\n    <div className=\"app\">\n      <ReactFlowProvider>\n        <ReactFlow\n          elements={elements}\n          onElementClick={onElementClick}\n          nodeTypes={nodeTypes}\n          snapToGrid={true}\n          snapGrid={[15, 15]}\n          style={{ width: '100%', height: '100%' }}\n        >\n          <MiniMap />\n          <Controls />\n          <Background />\n        </ReactFlow>\n      </ReactFlowProvider>\n      <div className=\"settings-panel\">\n        {selectedNode && (\n          <div>\n            <h3>Edit Node</h3>\n            <textarea value={editedLabel} onChange={handleLabelChange} />\n            <button onClick={handleSaveLabel}>Save</button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}