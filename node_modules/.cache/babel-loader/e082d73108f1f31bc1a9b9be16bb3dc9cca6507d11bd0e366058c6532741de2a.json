{"ast":null,"code":"var _jsxFileName = \"/home/abinesh/project/chatbot-flow-builder/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactFlow, { ReactFlowProvider, addEdge, MiniMap, Controls, Background, useNodes, useEdges } from 'react-flow-renderer';\nimport CustomNode from './CustomNode';\nimport Button from '@mui/material/Button';\nimport './App.css';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  textMessage: CustomNode\n};\nconst initialNodes = [{\n  id: '1',\n  type: 'textMessage',\n  data: {\n    label: 'Text Message 1'\n  },\n  position: {\n    x: 250,\n    y: 5\n  }\n}];\nconst initialEdges = [];\nlet id = 2; // Incremental ID for new nodes\n\nfunction App() {\n  _s();\n  const [nodes, setNodes] = useNodes(initialNodes);\n  const [edges, setEdges] = useEdges(initialEdges);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [editedLabel, setEditedLabel] = useState('');\n  const onConnect = params => {\n    setEdges(eds => addEdge(params, eds));\n    setSelectedNode(null); // Deselect any node when connecting edges\n  };\n  const addNode = () => {\n    const newNode = {\n      id: id.toString(),\n      type: 'textMessage',\n      data: {\n        label: `Text Message ${id}`\n      },\n      position: {\n        x: Math.random() * 400,\n        y: Math.random() * 400\n      }\n    };\n    id++;\n    setNodes(nds => [...nds, newNode]);\n  };\n  const validateFlow = () => {\n    let isValid = true;\n    nodes.forEach(node => {\n      const nodeEdges = edges.filter(edge => edge.source === node.id || edge.target === node.id);\n      if (node.type === 'textMessage' && nodeEdges.length === 0) {\n        isValid = false;\n      }\n    });\n    if (!isValid) {\n      alert('Validation failed: Some nodes do not have target handles.');\n    } else {\n      console.log('Flow is valid. Saving flow...', {\n        nodes,\n        edges\n      });\n      // Save the flow logic here\n    }\n  };\n  const handleLabelChange = event => {\n    setEditedLabel(event.target.value);\n  };\n  const updateNodeLabel = () => {\n    if (selectedNode) {\n      const updatedNodes = nodes.map(node => {\n        if (node.id === selectedNode.id) {\n          return {\n            ...node,\n            data: {\n              ...node.data,\n              label: editedLabel\n            }\n          };\n        }\n        return node;\n      });\n      setNodes(updatedNodes);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: validateFlow,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n          children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n            elements: nodes.concat(edges),\n            onElementsRemove: () => {},\n            onConnect: onConnect,\n            nodeTypes: nodeTypes,\n            children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: selectedNode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Node Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editedLabel,\n            onChange: handleLabelChange,\n            placeholder: \"Enter new label\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: updateNodeLabel,\n            children: \"Update Label\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons-container\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: addNode,\n              children: \"Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n            \"aria-label\": \"minimum height\",\n            minRows: 3,\n            placeholder: \"Minimum 3 rows\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RBfNeSDyqVRAKkE0ca8vLN1dEu4=\", false, function () {\n  return [useNodes, useEdges];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReactFlow","ReactFlowProvider","addEdge","MiniMap","Controls","Background","useNodes","useEdges","CustomNode","Button","TextareaAutosize","jsxDEV","_jsxDEV","Fragment","_Fragment","nodeTypes","textMessage","initialNodes","id","type","data","label","position","x","y","initialEdges","App","_s","nodes","setNodes","edges","setEdges","selectedNode","setSelectedNode","editedLabel","setEditedLabel","onConnect","params","eds","addNode","newNode","toString","Math","random","nds","validateFlow","isValid","forEach","node","nodeEdges","filter","edge","source","target","length","alert","console","log","handleLabelChange","event","value","updateNodeLabel","updatedNodes","map","style","height","children","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","elements","concat","onElementsRemove","onChange","placeholder","minRows","_c","$RefreshReg$"],"sources":["/home/abinesh/project/chatbot-flow-builder/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  MiniMap,\n  Controls,\n  Background,\n  useNodes,\n  useEdges,\n} from 'react-flow-renderer';\nimport CustomNode from './CustomNode';\nimport Button from '@mui/material/Button';\nimport './App.css';\n\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\n\nconst nodeTypes = {\n  textMessage: CustomNode,\n};\n\nconst initialNodes = [\n  { id: '1', type: 'textMessage', data: { label: 'Text Message 1' }, position: { x: 250, y: 5 } },\n];\n\nconst initialEdges = [];\n\nlet id = 2; // Incremental ID for new nodes\n\nfunction App() {\n  const [nodes, setNodes] = useNodes(initialNodes);\n  const [edges, setEdges] = useEdges(initialEdges);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [editedLabel, setEditedLabel] = useState('');\n\n  const onConnect = (params) => {\n    setEdges((eds) => addEdge(params, eds));\n    setSelectedNode(null); // Deselect any node when connecting edges\n  };\n\n  const addNode = () => {\n    const newNode = {\n      id: id.toString(),\n      type: 'textMessage',\n      data: { label: `Text Message ${id}` },\n      position: { x: Math.random() * 400, y: Math.random() * 400 },\n    };\n    id++;\n    setNodes((nds) => [...nds, newNode]);\n  };\n\n  const validateFlow = () => {\n    let isValid = true;\n    nodes.forEach((node) => {\n      const nodeEdges = edges.filter((edge) => edge.source === node.id || edge.target === node.id);\n      if (node.type === 'textMessage' && nodeEdges.length === 0) {\n        isValid = false;\n      }\n    });\n    if (!isValid) {\n      alert('Validation failed: Some nodes do not have target handles.');\n    } else {\n      console.log('Flow is valid. Saving flow...', { nodes, edges });\n      // Save the flow logic here\n    }\n  };\n\n  const handleLabelChange = (event) => {\n    setEditedLabel(event.target.value);\n  };\n\n  const updateNodeLabel = () => {\n    if (selectedNode) {\n      const updatedNodes = nodes.map((node) => {\n        if (node.id === selectedNode.id) {\n          return {\n            ...node,\n            data: {\n              ...node.data,\n              label: editedLabel,\n            },\n          };\n        }\n        return node;\n      });\n      setNodes(updatedNodes);\n    }\n  };\n\n  return (\n    <div style={{ height: '100vh' }}>\n      <header>\n        <Button variant=\"outlined\" onClick={validateFlow}>Save</Button>\n      </header>\n      <div className=\"container\">\n        <div className=\"main\">\n          <ReactFlowProvider>\n            <ReactFlow\n              elements={nodes.concat(edges)}\n              onElementsRemove={() => {}}\n              onConnect={onConnect}\n              nodeTypes={nodeTypes}\n            >\n              <MiniMap />\n              <Controls />\n              <Background />\n            </ReactFlow>\n          </ReactFlowProvider>\n        </div>\n        <div className=\"sidebar\">\n          {selectedNode ? (\n            <>\n              <h3>Node Settings</h3>\n              <input\n                type=\"text\"\n                value={editedLabel}\n                onChange={handleLabelChange}\n                placeholder=\"Enter new label\"\n              />\n              <Button variant=\"outlined\" onClick={updateNodeLabel}>Update Label</Button>\n            </>\n          ) : (\n            <>\n              <div className=\"buttons-container\">\n                <Button variant=\"outlined\" onClick={addNode}>Message</Button>\n              </div>\n              <TextareaAutosize\n                aria-label=\"minimum height\"\n                minRows={3}\n                placeholder=\"Minimum 3 rows\"\n              />\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}