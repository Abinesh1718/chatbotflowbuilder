{"ast":null,"code":"var _jsxFileName = \"/home/abinesh/project/chatbot-flow-builder/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\n\nimport React, { useState } from 'react';\nimport ReactFlow, { ReactFlowProvider, addEdge, removeElements, MiniMap, Controls, Background } from 'react-flow-renderer';\nimport CustomNode from './CustomNode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  textMessage: CustomNode\n};\nconst initialElements = [{\n  id: '1',\n  type: 'textMessage',\n  data: {\n    label: 'Text Message 1'\n  },\n  position: {\n    x: 250,\n    y: 5\n  }\n}];\nfunction App() {\n  _s();\n  const [elements, setElements] = useState(initialElements);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const onConnect = params => setElements(els => addEdge(params, els));\n  const onElementsRemove = elementsToRemove => setElements(els => removeElements(elementsToRemove, els));\n  const onElementClick = (event, element) => setSelectedNode(element);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n      children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n        elements: elements,\n        onConnect: onConnect,\n        onElementsRemove: onElementsRemove,\n        onElementClick: onElementClick,\n        nodeTypes: nodeTypes,\n        children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), selectedNode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Node Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Label: \", selectedNode.data.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5OSYCi2C8E30yG3ajxI3zovtbqI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReactFlow","ReactFlowProvider","addEdge","removeElements","MiniMap","Controls","Background","CustomNode","jsxDEV","_jsxDEV","nodeTypes","textMessage","initialElements","id","type","data","label","position","x","y","App","_s","elements","setElements","selectedNode","setSelectedNode","onConnect","params","els","onElementsRemove","elementsToRemove","onElementClick","event","element","style","height","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/home/abinesh/project/chatbot-flow-builder/src/App.js"],"sourcesContent":["// src/App.js\n\nimport React, { useState } from 'react';\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  removeElements,\n  MiniMap,\n  Controls,\n  Background,\n} from 'react-flow-renderer';\nimport CustomNode from './CustomNode';\n\nconst nodeTypes = {\n  textMessage: CustomNode,\n};\n\nconst initialElements = [\n  { id: '1', type: 'textMessage', data: { label: 'Text Message 1' }, position: { x: 250, y: 5 } },\n];\n\nfunction App() {\n  const [elements, setElements] = useState(initialElements);\n  const [selectedNode, setSelectedNode] = useState(null);\n\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\n  const onElementsRemove = (elementsToRemove) => setElements((els) => removeElements(elementsToRemove, els));\n  const onElementClick = (event, element) => setSelectedNode(element);\n\n  return (\n    <div style={{ height: '100vh' }}>\n      <ReactFlowProvider>\n        <ReactFlow\n          elements={elements}\n          onConnect={onConnect}\n          onElementsRemove={onElementsRemove}\n          onElementClick={onElementClick}\n          nodeTypes={nodeTypes}\n        >\n          <MiniMap />\n          <Controls />\n          <Background />\n        </ReactFlow>\n        {selectedNode && (\n          <div className=\"settings-panel\">\n            <h3>Node Settings</h3>\n            <p>Label: {selectedNode.data.label}</p>\n          </div>\n        )}\n      </ReactFlowProvider>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}