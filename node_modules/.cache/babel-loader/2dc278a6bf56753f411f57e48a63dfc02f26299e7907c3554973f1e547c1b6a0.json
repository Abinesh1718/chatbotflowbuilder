{"ast":null,"code":"var _jsxFileName = \"/home/abinesh/project/chatbot-flow-builder/src/CustomNode.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Handle } from 'react-flow-renderer';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomNode = ({\n  data,\n  isSelected,\n  onLabelChange,\n  setIsselected\n} = props) => {\n  _s();\n  const [editedLabel, setEditedLabel] = useState(data.label);\n  console.log(\"KMKMKMKMMKK\", setIsselected);\n  const handleChange = () => {\n    // console.log(data);\n    setIsselected(data);\n  };\n  const handleLabelChange = event => {\n    setEditedLabel(event.target.value);\n  };\n  const updateLabel = () => {\n    onLabelChange(editedLabel);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleChange,\n      style: {\n        width: '16rem',\n        border: isSelected ? 'solid 2px blue' : 'solid 0.5px black',\n        height: '4rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Handle, {\n        type: \"target\",\n        position: \"right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), isSelected ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editedLabel,\n        onChange: handleLabelChange,\n        onBlur: updateLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this) : data.label, /*#__PURE__*/_jsxDEV(Handle, {\n        type: \"source\",\n        position: \"left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomNode, \"aEeo/FzE+7lzYRalW510TCDl2YM=\");\n_c = CustomNode;\nexport default CustomNode;\nvar _c;\n$RefreshReg$(_c, \"CustomNode\");","map":{"version":3,"names":["React","useState","Handle","Button","jsxDEV","_jsxDEV","CustomNode","data","isSelected","onLabelChange","setIsselected","props","_s","editedLabel","setEditedLabel","label","console","log","handleChange","handleLabelChange","event","target","value","updateLabel","children","onClick","style","width","border","height","type","position","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onBlur","_c","$RefreshReg$"],"sources":["/home/abinesh/project/chatbot-flow-builder/src/CustomNode.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Handle } from 'react-flow-renderer';\nimport Button from '@mui/material/Button';\n\nconst CustomNode = ({ data, isSelected, onLabelChange, setIsselected } = props) => {\n  const [editedLabel, setEditedLabel] = useState(data.label);\n  console.log(\"KMKMKMKMMKK\", setIsselected);\n\n  const handleChange = () => {\n    // console.log(data);\n    setIsselected(data)\n  };\n\n  const handleLabelChange = (event) => {\n    setEditedLabel(event.target.value);\n  };\n\n  const updateLabel = () => {\n    onLabelChange(editedLabel);\n  };\n\n  return (\n    <div>\n      <Button\n        onClick={handleChange}\n        style={{\n          width: '16rem',\n          border: isSelected ? 'solid 2px blue' : 'solid 0.5px black',\n          height: '4rem',\n        }}\n      >\n        <Handle type=\"target\" position=\"right\" />\n        {isSelected ? (\n          <input\n            type=\"text\"\n            value={editedLabel}\n            onChange={handleLabelChange}\n            onBlur={updateLabel}\n          />\n        ) : (\n          data.label\n        )}\n        <Handle type=\"source\" position=\"left\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default CustomNode;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,UAAU,GAAGA,CAAC;EAAEC,IAAI;EAAEC,UAAU;EAAEC,aAAa;EAAEC;AAAc,CAAC,GAAGC,KAAK,KAAK;EAAAC,EAAA;EACjF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAACM,IAAI,CAACQ,KAAK,CAAC;EAC1DC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEP,aAAa,CAAC;EAEzC,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAR,aAAa,CAACH,IAAI,CAAC;EACrB,CAAC;EAED,MAAMY,iBAAiB,GAAIC,KAAK,IAAK;IACnCN,cAAc,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBd,aAAa,CAACI,WAAW,CAAC;EAC5B,CAAC;EAED,oBACER,OAAA;IAAAmB,QAAA,eACEnB,OAAA,CAACF,MAAM;MACLsB,OAAO,EAAEP,YAAa;MACtBQ,KAAK,EAAE;QACLC,KAAK,EAAE,OAAO;QACdC,MAAM,EAAEpB,UAAU,GAAG,gBAAgB,GAAG,mBAAmB;QAC3DqB,MAAM,EAAE;MACV,CAAE;MAAAL,QAAA,gBAEFnB,OAAA,CAACH,MAAM;QAAC4B,IAAI,EAAC,QAAQ;QAACC,QAAQ,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACxC3B,UAAU,gBACTH,OAAA;QACEyB,IAAI,EAAC,MAAM;QACXR,KAAK,EAAET,WAAY;QACnBuB,QAAQ,EAAEjB,iBAAkB;QAC5BkB,MAAM,EAAEd;MAAY;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,GAEF5B,IAAI,CAACQ,KACN,eACDV,OAAA,CAACH,MAAM;QAAC4B,IAAI,EAAC,QAAQ;QAACC,QAAQ,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACvB,EAAA,CA1CIN,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AA4ChB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}